{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Michael\\\\proj-3\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"C:\\\\Users\\\\Michael\\\\proj-3\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Michael\\\\proj-3\\\\client\\\\src\\\\components\\\\Modal\\\\Modal.js\";\nimport React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Modal from \"react-modal\"; // Make sure to bind modal to your appElement (http://reactcommunity.org/react-modal/accessibility/)\n\nModal.setAppElement(\"#root\");\nvar customStyles = {\n  content: {\n    margin: \" auto auto auto auto\",\n    height: \"400px\",\n    width: \"400px\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  }\n};\n\nfunction ModalCard(props) {\n  var setSelectedCharacter = props.setSelectedCharacter,\n      selectedCharacter = props.selectedCharacter;\n  var name = props.char;\n\n  var _useState = useState({\n    src: \"/images/hiragana/\".concat(selectedCharacter.name, \".png\")\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      url = _useState2[0],\n      setUrl = _useState2[1];\n\n  function handleImgChange() {\n    if (selectedCharacter.name === \"blank\") {\n      return url.src;\n    } else if (url.src === \"/images/hiragana/\".concat(selectedCharacter.name, \".png\")) {\n      setUrl(_objectSpread({}, url, {\n        src: \"/images/hiragana/\".concat(selectedCharacter.name, \"-so.PNG\")\n      }));\n    } else {\n      setUrl({\n        src: \"/images/hiragana/\".concat(selectedCharacter.name, \".png\")\n      });\n    }\n  }\n\n  var closeModal = function closeModal() {\n    setSelectedCharacter(null);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Modal, {\n    isOpen: Boolean(selectedCharacter),\n    onRequestClose: closeModal,\n    style: customStyles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, selectedCharacter && /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: url.src,\n    style: {\n      height: \"min-content\",\n      width: \"min-content\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, \"Character Name: \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 31\n    }\n  }, selectedCharacter.name)), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, \"Pronunciation: \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 30\n    }\n  }, selectedCharacter.sound)), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleImgChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, \"Stroke Order\"))));\n}\n\nexport default ModalCard;","map":{"version":3,"sources":["C:/Users/Michael/proj-3/client/src/components/Modal/Modal.js"],"names":["React","useState","ReactDOM","Modal","setAppElement","customStyles","content","margin","height","width","display","flexDirection","alignItems","ModalCard","props","setSelectedCharacter","selectedCharacter","name","char","src","url","setUrl","handleImgChange","closeModal","Boolean","sound"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,KAAP,MAAkB,aAAlB,C,CAEA;;AACAA,KAAK,CAACC,aAAN,CAAoB,OAApB;AACA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE;AACPC,IAAAA,MAAM,EAAE,sBADD;AAEPC,IAAAA,MAAM,EAAE,OAFD;AAGPC,IAAAA,KAAK,EAAE,OAHA;AAIPC,IAAAA,OAAO,EAAE,MAJF;AAKPC,IAAAA,aAAa,EAAE,QALR;AAMPC,IAAAA,UAAU,EAAE;AANL;AADU,CAArB;;AAWA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA,MAChBC,oBADgB,GAC4BD,KAD5B,CAChBC,oBADgB;AAAA,MACMC,iBADN,GAC4BF,KAD5B,CACME,iBADN;AAExB,MAAIC,IAAI,GAAGH,KAAK,CAACI,IAAjB;;AAFwB,kBAIFjB,QAAQ,CAAC;AAC7BkB,IAAAA,GAAG,6BAAsBH,iBAAiB,CAACC,IAAxC;AAD0B,GAAD,CAJN;AAAA;AAAA,MAIjBG,GAJiB;AAAA,MAIZC,MAJY;;AAQxB,WAASC,eAAT,GAA2B;AACzB,QAAIN,iBAAiB,CAACC,IAAlB,KAA2B,OAA/B,EAAwC;AACtC,aAAOG,GAAG,CAACD,GAAX;AACD,KAFD,MAEO,IAAIC,GAAG,CAACD,GAAJ,gCAAgCH,iBAAiB,CAACC,IAAlD,SAAJ,EAAkE;AACvEI,MAAAA,MAAM,mBACDD,GADC;AAEJD,QAAAA,GAAG,6BAAsBH,iBAAiB,CAACC,IAAxC;AAFC,SAAN;AAID,KALM,MAKA;AACLI,MAAAA,MAAM,CAAC;AAAEF,QAAAA,GAAG,6BAAsBH,iBAAiB,CAACC,IAAxC;AAAL,OAAD,CAAN;AACD;AACF;;AAED,MAAMM,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvBR,IAAAA,oBAAoB,CAAC,IAAD,CAApB;AACD,GAFD;;AAIA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AACE,IAAA,MAAM,EAAES,OAAO,CAACR,iBAAD,CADjB;AAEE,IAAA,cAAc,EAAEO,UAFlB;AAGE,IAAA,KAAK,EAAElB,YAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGW,iBAAiB,iBAChB,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,GAAG,EAAEI,GAAG,CAACD,GADX;AAEE,IAAA,KAAK,EAAE;AAAEX,MAAAA,MAAM,EAAE,aAAV;AAAyBC,MAAAA,KAAK,EAAE;AAAhC,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCACkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASO,iBAAiB,CAACC,IAA3B,CADlB,CALF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCACiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASD,iBAAiB,CAACS,KAA3B,CADjB,CARF,eAWE;AAAQ,IAAA,OAAO,EAAEH,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAXF,CANJ,CADF,CADF;AAyBD;;AAED,eAAeT,SAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Modal from \"react-modal\";\r\n\r\n// Make sure to bind modal to your appElement (http://reactcommunity.org/react-modal/accessibility/)\r\nModal.setAppElement(\"#root\");\r\nconst customStyles = {\r\n  content: {\r\n    margin: \" auto auto auto auto\",\r\n    height: \"400px\",\r\n    width: \"400px\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\"\r\n  }\r\n};\r\n\r\nfunction ModalCard(props) {\r\n  const { setSelectedCharacter, selectedCharacter } = props;\r\n  let name = props.char;\r\n\r\n  const [url, setUrl] = useState({\r\n    src: `/images/hiragana/${selectedCharacter.name}.png`\r\n  });\r\n\r\n  function handleImgChange() {\r\n    if (selectedCharacter.name === \"blank\") {\r\n      return url.src;\r\n    } else if (url.src === `/images/hiragana/${selectedCharacter.name}.png`) {\r\n      setUrl({\r\n        ...url,\r\n        src: `/images/hiragana/${selectedCharacter.name}-so.PNG`\r\n      });\r\n    } else {\r\n      setUrl({ src: `/images/hiragana/${selectedCharacter.name}.png` });\r\n    }\r\n  }\r\n\r\n  const closeModal = () => {\r\n    setSelectedCharacter(null);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        isOpen={Boolean(selectedCharacter)}\r\n        onRequestClose={closeModal}\r\n        style={customStyles}\r\n      >\r\n        {selectedCharacter && (\r\n          <React.Fragment>\r\n            <img\r\n              src={url.src}\r\n              style={{ height: \"min-content\", width: \"min-content\" }}\r\n            />\r\n            <h2>\r\n              Character Name: <strong>{selectedCharacter.name}</strong>\r\n            </h2>\r\n            <h2>\r\n              Pronunciation: <strong>{selectedCharacter.sound}</strong>\r\n            </h2>\r\n            <button onClick={handleImgChange}>Stroke Order</button>\r\n          </React.Fragment>\r\n        )}\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ModalCard;\r\n"]},"metadata":{},"sourceType":"module"}